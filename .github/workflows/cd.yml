name: Create and publish Docker image/package

on:
  push:
    branches:
      - main
jobs:
  ng-build:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: streaming-htl-website
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cache
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'
          cache-dependency-path: package-lock.json
      - name: install and build
        run: |
          npm run ci
          npx prisma generate
          npm run build
          rm -rf ./node_modules/
      - name: push artifact
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: |
            dist
          retention-days: 7
  docker-push:
    needs: ng-build
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: streaming-htl-website
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download ng build       # Download the above uploaded artifact
        uses: actions/download-artifact@v2
        with:
          name: build
      - name: Login to Github Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build image
        run: docker build . --tag $IMAGE_NAME \
      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
